/** 
 * This file was generated by 'vite-plugin-kit-routes'
 * 
 *      >> DO NOT EDIT THIS FILE MANUALLY <<
 */

export const PAGES = {
  "_ROOT": () =>  { return `/` },
  "abstract_fragments": () =>  { return `/abstract-fragments` },
  "abstract_fragments_nested_connection": () =>  { return `/abstract-fragments/nested-connection` },
  "blocking": () =>  { return `/blocking` },
  "blocking_query_with_blocking": () =>  { return `/blocking/query_with_blocking` },
  "blocking_query_with_blocking_disable": () =>  { return `/blocking/query_with_blocking_disable` },
  "cache": () =>  { return `/cache` },
  "customIDs": () =>  { return `/customIDs` },
  "fetching_route_1": () =>  { return `/fetching/route_1` },
  "fetching_route_2": () =>  { return `/fetching/route_2` },
  "fetching_with_load": () =>  { return `/fetching/with_load` },
  "fetching_without_load": () =>  { return `/fetching/without_load` },
  "fragment_masking_partial": () =>  { return `/fragment-masking-partial` },
  "layouts": () =>  { return `/layouts` },
  "layouts_page2": () =>  { return `/layouts/page2` },
  "lists_all": () =>  { return `/lists/all` },
  "lists_fragment": () =>  { return `/lists/fragment` },
  "loading_state": () =>  { return `/loading-state` },
  "nested_argument_fragments": () =>  { return `/nested-argument-fragments` },
  "nested_routes_user_userId_birth": (params: {userId?: string | number}= {}) =>  { params.userId = params.userId ?? '1'; return `/nested-routes/user-[userId]/birth` },
  "nested_routes_user_userId_friends": (params: {userId?: string | number}= {}) =>  { params.userId = params.userId ?? '1'; return `/nested-routes/user-[userId]/friends` },
  "pagination_fragment_backwards_cursor": () =>  { return `/pagination/fragment/backwards-cursor` },
  "pagination_fragment_bidirectional_cursor": () =>  { return `/pagination/fragment/bidirectional-cursor` },
  "pagination_fragment_forward_cursor": () =>  { return `/pagination/fragment/forward-cursor` },
  "pagination_fragment_offset": () =>  { return `/pagination/fragment/offset` },
  "pagination_query_backwards_cursor": () =>  { return `/pagination/query/backwards-cursor` },
  "pagination_query_bidirectional_cursor": () =>  { return `/pagination/query/bidirectional-cursor` },
  "pagination_query_bidirectional_cursor_single_page": () =>  { return `/pagination/query/bidirectional-cursor-single-page` },
  "pagination_query_forward_cursor": () =>  { return `/pagination/query/forward-cursor` },
  "pagination_query_offset": () =>  { return `/pagination/query/offset` },
  "pagination_query_offset_variable": () =>  { return `/pagination/query/offset-variable` },
  "plugin_fragment_update": () =>  { return `/plugin/fragment/update` },
  "plugin_load_inlineAndGlobal": () =>  { return `/plugin/load/inlineAndGlobal` },
  "plugin_load_list": () =>  { return `/plugin/load/list` },
  "plugin_load_pageQuery": () =>  { return `/plugin/load/pageQuery` },
  "plugin_load_pageQuery_session": () =>  { return `/plugin/load/pageQuery-session` },
  "plugin_load_pageQuery_with_server": () =>  { return `/plugin/load/pageQuery-with-server` },
  "plugin_load_single": () =>  { return `/plugin/load/single` },
  "plugin_query_afterLoad": () =>  { return `/plugin/query/afterLoad` },
  "plugin_query_beforeLoad": () =>  { return `/plugin/query/beforeLoad` },
  "plugin_query_component": () =>  { return `/plugin/query/component` },
  "plugin_query_component_in_route": () =>  { return `/plugin/query/component-in-route` },
  "plugin_query_infer_input_custom_function_snapshot_id": (params: {snapshot?: string | number, id?: string | number}= {}) =>  { params.snapshot = params.snapshot ?? 'snapshot'; params.id = params.id ?? '1'; return `/plugin/query/infer-input/custom-function-[snapshot]-[id]` },
  "plugin_query_infer_input_optional_id": (params: {id?: string | number}= {}) =>  { return `/plugin/query/infer-input/optional${params?.id ? `${params?.id}`: ''}` },
  "plugin_query_infer_input_user_snapshot_id": (params: {snapshot?: string | number, id?: string | number}= {}) =>  { params.snapshot = params.snapshot ?? 'snapshot'; params.id = params.id ?? '1'; return `/plugin/query/infer-input/user-[snapshot]-[id]` },
  "plugin_query_layout": () =>  { return `/plugin/query/layout` },
  "plugin_query_multiple": () =>  { return `/plugin/query/multiple` },
  "plugin_query_scalars": () =>  { return `/plugin/query/scalars` },
  "plugin_query_simple": () =>  { return `/plugin/query/simple` },
  "plugin_query_variable_id_integer": (params: {id?: string | number}= {}) =>  { params.id = params.id ?? '1'; return `/plugin/query/variable-[id=integer]` },
  "plugin_query_variables_error": () =>  { return `/plugin/query/variables-error` },
  "plugin_subscription_renders": () =>  { return `/plugin/subscription/renders` },
  "required_field": () =>  { return `/required-field` },
  "session_signin_signout": () =>  { return `/session_signin_signout` },
  "stores_action_mutation": () =>  { return `/stores/action-mutation` },
  "stores_comp_disable_auto_fetch": () =>  { return `/stores/comp_disable_auto_fetch` },
  "stores_component_no_load_no_setup": () =>  { return `/stores/component_no_load_no_setup` },
  "stores_connection_fragment": () =>  { return `/stores/connection-fragment` },
  "stores_directives": () =>  { return `/stores/directives` },
  "stores_endpoint_query": () =>  { return `/stores/endpoint-query` },
  "stores_fragment_null": () =>  { return `/stores/fragment-null` },
  "stores_metadata": () =>  { return `/stores/metadata` },
  "stores_mutation": () =>  { return `/stores/mutation` },
  "stores_mutation_enums": () =>  { return `/stores/mutation-enums` },
  "stores_mutation_opti_list": () =>  { return `/stores/mutation-opti-list` },
  "stores_mutation_scalar_multi_upload": () =>  { return `/stores/mutation-scalar-multi-upload` },
  "stores_mutation_scalar_single_upload": () =>  { return `/stores/mutation-scalar-single-upload` },
  "stores_mutation_scalars": () =>  { return `/stores/mutation-scalars` },
  "stores_mutation_update": () =>  { return `/stores/mutation-update` },
  "stores_nested_list": () =>  { return `/stores/nested-list` },
  "stores_network": () =>  { return `/stores/network` },
  "stores_network_one_store_multivariables": () =>  { return `/stores/network-one-store-multivariables` },
  "stores_pagination_query_forward_cursor": () =>  { return `/stores/pagination/query/forward-cursor` },
  "stores_partial_off": () =>  { return `/stores/partial-off` },
  "stores_partial_off_child": () =>  { return `/stores/partial-off/child` },
  "stores_partial_partial_List": () =>  { return `/stores/partial/partial_List` },
  "stores_partial_partial_userId": (params: {userId?: string | number}= {}) =>  { params.userId = params.userId ?? '1'; return `/stores/partial/partial_[userId]` },
  "stores_partial_partial_userId_Light": (params: {userId?: string | number}= {}) =>  { params.userId = params.userId ?? '1'; return `/stores/partial/partial_[userId]_Light` },
  "stores_prefetch_userId": (params: {userId?: string | number}= {}) =>  { params.userId = params.userId ?? '1'; return `/stores/prefetch-[userId]` },
  "stores_session": () =>  { return `/stores/session` },
  "stores_ssr": () =>  { return `/stores/ssr` },
  "stores_ssr_userId": (params: {userId?: string | number}= {}) =>  { params.userId = params.userId ?? '1'; return `/stores/ssr-[userId]` },
  "stores_ssr_loadall_store_without_variables": () =>  { return `/stores/ssr-loadall-store-without-variables` },
  "stores_ssr_one_store_multivariables": () =>  { return `/stores/ssr-one-store-multivariables` },
  "stores_subunsub_list": () =>  { return `/stores/subunsub-list` },
  "stores_subunsub_mutation": () =>  { return `/stores/subunsub-mutation` },
  "subscriptions_snapshot": (params: {snapshot?: string | number}= {}) =>  { params.snapshot = params.snapshot ?? 'snapshot'; return `/subscriptions/[snapshot]` },
  "subscriptions_two": () =>  { return `/subscriptions/two` },
  "union_insert": () =>  { return `/union-insert` },
  "union_result": () =>  { return `/union-result` }
          }

export const SERVERS = {
  
          }

export const ACTIONS = {
  "nested_routes": () =>  { return `/nested-routes` },
  "nested_routes_user_userId": (params: {userId: string | number}) =>  { return `/nested-routes/user-${params.userId}` },
  "session_signin_signout": (action: 'sign_in' | 'sign_out') =>  { return `/session_signin_signout?/${action}` }
          }

const appendSp = (sp?: Record<string, string | number | undefined>) => {
  if (sp === undefined) return ''
  const mapping = Object.entries(sp)
    .filter(c => c[1] !== undefined)
    .map(c => [c[0], String(c[1])])

  const formated = new URLSearchParams(mapping).toString()
  if (formated) {
    return `?${formated}`
  }
  return ''
}
